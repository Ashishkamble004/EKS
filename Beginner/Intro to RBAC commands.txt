RBAC:
========================

Create NS & deploy pods in that NS:
----------------------------------
kubectl create namespace rbac-test
kubectl create deploy nginx --image=nginx -n rbac-test

kubectl get all -n rbac-test


Create iam user rbac-user:
---------------------------
aws iam create-user --user-name rbac-user
aws iam create-access-key --user-name rbac-user | tee /tmp/create_output.json

cat << EoF > rbacuser_creds.sh
export AWS_SECRET_ACCESS_KEY=$(jq -r .AccessKey.SecretAccessKey /tmp/create_output.json)
export AWS_ACCESS_KEY_ID=$(jq -r .AccessKey.AccessKeyId /tmp/create_output.json)
EoF

Get the current aws-auth Config Map yaml file:
-----------------------------------------------
kubectl get configmap -n kube-system aws-auth -o yaml | grep -v "creationTimestamp\|resourceVersion\|selfLink\|uid" | sed '/^  annotations:/,+2 d' > aws-auth.yaml


append rbac-user to the yaml file:
-----------------------------------
cat << EoF >> aws-auth.yaml
data:
  mapUsers: |
    - userarn: arn:aws:iam::${ACCOUNT_ID}:user/rbac-user
      username: rbac-user
EoF

Apply the Yaml file:
--------------------
kubectl apply -f aws-auth.yaml


. rbacuser_creds.sh

Check Current User:
--------------------
aws sts get-caller-identity

kubectl get pods -n rbac-test

Unset the Access-Keys:
--------------------
unset AWS_SECRET_ACCESS_KEY
unset AWS_ACCESS_KEY_ID


aws sts get-caller-identity

Create Role for rbac-user:
---------------------------

cat << EoF > rbacuser-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: rbac-test
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["list","get","watch"]
- apiGroups: ["extensions","apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
EoF


Create Role Binding:
-----------------------
cat << EoF > rbacuser-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
  namespace: rbac-test
subjects:
- kind: User
  name: rbac-user
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
EoF

 Apply the yaml file:
 ----------------------
kubectl apply -f rbacuser-role.yaml
kubectl apply -f rbacuser-role-binding.yaml

. rbacuser_creds.sh; aws sts get-caller-identity

kubectl get pods -n rbac-test

kubectl get pods -n kube-system
